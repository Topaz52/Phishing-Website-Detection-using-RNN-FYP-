{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPdkkZ1Lef2M+XsBhSN51sg"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["#importing basic packages\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt"],"metadata":{"id":"oBZ6wV-7SbFo","executionInfo":{"status":"ok","timestamp":1705021802902,"user_tz":-480,"elapsed":1278,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["!wget https://raw.githubusercontent.com/Topaz52/phishing-website-URL-dataset/main/combined_benign_phishing.csv"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nDKtHGQDSePq","executionInfo":{"status":"ok","timestamp":1705021803723,"user_tz":-480,"elapsed":828,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}},"outputId":"04defa23-1668-4c94-a7ad-727be9c7b475"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["--2024-01-12 01:10:01--  https://raw.githubusercontent.com/Topaz52/phishing-website-URL-dataset/main/combined_benign_phishing.csv\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 3582803 (3.4M) [text/plain]\n","Saving to: ‘combined_benign_phishing.csv’\n","\n","combined_benign_phi 100%[===================>]   3.42M  --.-KB/s    in 0.05s   \n","\n","2024-01-12 01:10:01 (73.2 MB/s) - ‘combined_benign_phishing.csv’ saved [3582803/3582803]\n","\n"]}]},{"cell_type":"code","source":["dataset = pd.read_csv('combined_benign_phishing.csv')\n","dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"8Z9vtts1Si5R","executionInfo":{"status":"ok","timestamp":1705021803724,"user_tz":-480,"elapsed":56,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}},"outputId":"a37b1f02-93da-4bcc-ad23-661d15f235e3"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                            Domain  Have_IP  Have_At  URL_Length  URL_Depth  \\\n","0                     wmmayhem.com        0        0           0          0   \n","1  ballymenaunitedyouthacademy.com        0        0           0          0   \n","2              brusselsgaybars.com        0        0           0          0   \n","3          sportsbettingtennis.net        0        0           0          0   \n","4                         i29.mobi        0        0           0          0   \n","\n","   Redirection  https_Domain  TinyURL  Prefix/Suffix  Label  \n","0            0             0        0              0      0  \n","1            0             0        0              0      0  \n","2            0             0        0              0      0  \n","3            0             0        0              0      0  \n","4            0             0        0              0      0  "],"text/html":["\n","  <div id=\"df-ff9d8dcf-ea48-46c5-8e4c-90d2c340cc43\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Domain</th>\n","      <th>Have_IP</th>\n","      <th>Have_At</th>\n","      <th>URL_Length</th>\n","      <th>URL_Depth</th>\n","      <th>Redirection</th>\n","      <th>https_Domain</th>\n","      <th>TinyURL</th>\n","      <th>Prefix/Suffix</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>wmmayhem.com</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ballymenaunitedyouthacademy.com</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>brusselsgaybars.com</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sportsbettingtennis.net</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>i29.mobi</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff9d8dcf-ea48-46c5-8e4c-90d2c340cc43')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ff9d8dcf-ea48-46c5-8e4c-90d2c340cc43 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ff9d8dcf-ea48-46c5-8e4c-90d2c340cc43');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-18b33ed0-fe53-44e1-a6b9-c7bab1a98625\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18b33ed0-fe53-44e1-a6b9-c7bab1a98625')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-18b33ed0-fe53-44e1-a6b9-c7bab1a98625 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#Dropping the Domain column\n","data = dataset.drop(['Domain'], axis = 1).copy()"],"metadata":{"id":"mEfGmI5SSlOC","executionInfo":{"status":"ok","timestamp":1705021803725,"user_tz":-480,"elapsed":52,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# Sepratating & assigning features and target columns to X & y\n","y = data['Label']\n","X = data.drop('Label',axis=1)\n","X.shape, y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sj2w1G7LSnhc","executionInfo":{"status":"ok","timestamp":1705021803725,"user_tz":-480,"elapsed":51,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}},"outputId":"30347968-13b6-4a45-b1af-b1004209525a"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((83000, 8), (83000,))"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Mri7qtDufQtk","executionInfo":{"status":"ok","timestamp":1705021803726,"user_tz":-480,"elapsed":49,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}},"outputId":"bc2b9670-8dbc-4ad3-8096-896192a4f523"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Have_IP  Have_At  URL_Length  URL_Depth  Redirection  https_Domain  \\\n","0        0        0           0          0            0             0   \n","1        0        0           0          0            0             0   \n","2        0        0           0          0            0             0   \n","3        0        0           0          0            0             0   \n","4        0        0           0          0            0             0   \n","\n","   TinyURL  Prefix/Suffix  Label  \n","0        0              0      0  \n","1        0              0      0  \n","2        0              0      0  \n","3        0              0      0  \n","4        0              0      0  "],"text/html":["\n","  <div id=\"df-95a62373-5ee6-454e-8c51-431aa57ecdd2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Have_IP</th>\n","      <th>Have_At</th>\n","      <th>URL_Length</th>\n","      <th>URL_Depth</th>\n","      <th>Redirection</th>\n","      <th>https_Domain</th>\n","      <th>TinyURL</th>\n","      <th>Prefix/Suffix</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-95a62373-5ee6-454e-8c51-431aa57ecdd2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-95a62373-5ee6-454e-8c51-431aa57ecdd2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-95a62373-5ee6-454e-8c51-431aa57ecdd2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2d9e3766-db34-47f9-848f-cc8749733c63\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d9e3766-db34-47f9-848f-cc8749733c63')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2d9e3766-db34-47f9-848f-cc8749733c63 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["X.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"MqIfyXk_WGkj","executionInfo":{"status":"ok","timestamp":1705021803727,"user_tz":-480,"elapsed":47,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}},"outputId":"c4e1553c-eb1e-4d8a-a98e-d07dac9846b3"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Have_IP  Have_At  URL_Length  URL_Depth  Redirection  https_Domain  \\\n","0        0        0           0          0            0             0   \n","1        0        0           0          0            0             0   \n","2        0        0           0          0            0             0   \n","3        0        0           0          0            0             0   \n","4        0        0           0          0            0             0   \n","\n","   TinyURL  Prefix/Suffix  \n","0        0              0  \n","1        0              0  \n","2        0              0  \n","3        0              0  \n","4        0              0  "],"text/html":["\n","  <div id=\"df-f63ea198-5822-4100-aacf-9f8b52cc1e8d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Have_IP</th>\n","      <th>Have_At</th>\n","      <th>URL_Length</th>\n","      <th>URL_Depth</th>\n","      <th>Redirection</th>\n","      <th>https_Domain</th>\n","      <th>TinyURL</th>\n","      <th>Prefix/Suffix</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f63ea198-5822-4100-aacf-9f8b52cc1e8d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f63ea198-5822-4100-aacf-9f8b52cc1e8d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f63ea198-5822-4100-aacf-9f8b52cc1e8d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-54a3e153-9e52-4a05-a037-8f9694815cff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-54a3e153-9e52-4a05-a037-8f9694815cff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-54a3e153-9e52-4a05-a037-8f9694815cff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["\n","\n","#  **Preprocessing**\n","\n"],"metadata":{"id":"S_qBKg27VLAy"}},{"cell_type":"code","source":["# importing required packages for this section\n","from urllib.parse import urlparse,urlencode\n","import ipaddress\n","import re"],"metadata":{"id":"My9yPPguVjlr","executionInfo":{"status":"ok","timestamp":1705021803727,"user_tz":-480,"elapsed":45,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# 1.Domain of the URL (Domain)\n","def getDomain(url):\n","  parsed_url = urlparse(url)\n","  domain = parsed_url.netloc\n","  return domain"],"metadata":{"id":"cNZt9apXVcwK","executionInfo":{"status":"ok","timestamp":1705021803728,"user_tz":-480,"elapsed":45,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# 2.Checks for IP address in URL (Have_IP)\n","def havingIP(url):\n","  try:\n","    ipaddress.ip_address(url)\n","    ip = 1\n","  except:\n","    ip = 0\n","  return ip"],"metadata":{"id":"CRmyWVfqVfD0","executionInfo":{"status":"ok","timestamp":1705021803729,"user_tz":-480,"elapsed":45,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# 3.Checks the presence of @ in URL (Have_At)\n","def haveAtSign(url):\n","  if \"@\" in url:\n","    at = 1\n","  else:\n","    at = 0\n","  return at"],"metadata":{"id":"S1Dpv9v4Vyf3","executionInfo":{"status":"ok","timestamp":1705021803730,"user_tz":-480,"elapsed":45,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# 4.Finding the length of URL and categorizing (URL_Length)\n","def getLength(url):\n","  if len(url) < 54:\n","    length = 0\n","  else:\n","    length = 1\n","  return length"],"metadata":{"id":"mr0ZsH-tVzAZ","executionInfo":{"status":"ok","timestamp":1705021803730,"user_tz":-480,"elapsed":44,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# 5.Gives number of '/' in URL (URL_Depth)\n","def getDepth(url):\n","  s = urlparse(url).path.split('/')\n","  depth = 0\n","  for j in range(len(s)):\n","    if len(s[j]) != 0:\n","      depth = depth+1\n","  return depth"],"metadata":{"id":"X76y8ORqWgW1","executionInfo":{"status":"ok","timestamp":1705021804524,"user_tz":-480,"elapsed":24,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# 6.Checking for redirection '//' in the url (Redirection)\n","def redirection(url):\n","  pos = url.rfind('//')\n","  if pos > 6:\n","    if pos > 7:\n","      return 1\n","    else:\n","      return 0\n","  else:\n","    return 0"],"metadata":{"id":"aL_MUQ6qWhxr","executionInfo":{"status":"ok","timestamp":1705021804524,"user_tz":-480,"elapsed":22,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# 7.Existence of “HTTPS” Token in the Domain Part of the URL (https_Domain)\n","def httpDomain(url):\n","  domain = urlparse(url).netloc\n","  if 'https' in domain:\n","    return 1\n","  else:\n","    return 0"],"metadata":{"id":"8DffYFraWjCH","executionInfo":{"status":"ok","timestamp":1705021804525,"user_tz":-480,"elapsed":22,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["#listing shortening services\n","shortening_services = r\"bit\\.ly|goo\\.gl|shorte\\.st|go2l\\.ink|x\\.co|ow\\.ly|t\\.co|tinyurl|tr\\.im|is\\.gd|cli\\.gs|\" \\\n","                      r\"yfrog\\.com|migre\\.me|ff\\.im|tiny\\.cc|url4\\.eu|twit\\.ac|su\\.pr|twurl\\.nl|snipurl\\.com|\" \\\n","                      r\"short\\.to|BudURL\\.com|ping\\.fm|post\\.ly|Just\\.as|bkite\\.com|snipr\\.com|fic\\.kr|loopt\\.us|\" \\\n","                      r\"doiop\\.com|short\\.ie|kl\\.am|wp\\.me|rubyurl\\.com|om\\.ly|to\\.ly|bit\\.do|t\\.co|lnkd\\.in|db\\.tt|\" \\\n","                      r\"qr\\.ae|adf\\.ly|goo\\.gl|bitly\\.com|cur\\.lv|tinyurl\\.com|ow\\.ly|bit\\.ly|ity\\.im|q\\.gs|is\\.gd|\" \\\n","                      r\"po\\.st|bc\\.vc|twitthis\\.com|u\\.to|j\\.mp|buzurl\\.com|cutt\\.us|u\\.bb|yourls\\.org|x\\.co|\" \\\n","                      r\"prettylinkpro\\.com|scrnch\\.me|filoops\\.info|vzturl\\.com|qr\\.net|1url\\.com|tweez\\.me|v\\.gd|\" \\\n","                      r\"tr\\.im|link\\.zip\\.net\""],"metadata":{"id":"fNNfLLj-Wkr6","executionInfo":{"status":"ok","timestamp":1705021804525,"user_tz":-480,"elapsed":21,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# 8. Checking for Shortening Services in URL (Tiny_URL)\n","def tinyURL(url):\n","    match=re.search(shortening_services,url)\n","    if match:\n","        return 1\n","    else:\n","        return 0"],"metadata":{"id":"vJkJRGO9Wl-z","executionInfo":{"status":"ok","timestamp":1705021804525,"user_tz":-480,"elapsed":20,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# 9.Checking for Prefix or Suffix Separated by (-) in the Domain (Prefix/Suffix)\n","def prefixSuffix(url):\n","    if '-' in urlparse(url).netloc:\n","        return 1            # phishing\n","    else:\n","        return 0            # legitimate"],"metadata":{"id":"tdQQatBXWnJ3","executionInfo":{"status":"ok","timestamp":1705021804526,"user_tz":-480,"elapsed":20,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# importing required packages for this section\n","import requests"],"metadata":{"id":"VQ7YXlb5WpB9","executionInfo":{"status":"ok","timestamp":1705021804526,"user_tz":-480,"elapsed":19,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# 10. IFrame Redirection (iFrame)\n","def iframe(response):\n","  if response == \"\":\n","      return 1\n","  else:\n","      if re.findall(r\"[<iframe>|<frameBorder>]\", response.text):\n","          return 0\n","      else:\n","          return 1"],"metadata":{"id":"YVKgPGpJWtJn","executionInfo":{"status":"ok","timestamp":1705021804526,"user_tz":-480,"elapsed":17,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["# 11.Checks the effect of mouse over on status bar (Mouse_Over)\n","def mouseOver(response):\n","  if response == \"\" :\n","    return 1\n","  else:\n","    if re.findall(\"<script>.+onmouseover.+</script>\", response.text):\n","      return 1\n","    else:\n","      return 0"],"metadata":{"id":"TsYuHrgbWuQm","executionInfo":{"status":"ok","timestamp":1705021804527,"user_tz":-480,"elapsed":17,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["# 12.Checks the status of the right click attribute (Right_Click)\n","def rightClick(response):\n","  if response == \"\":\n","    return 1\n","  else:\n","    if re.findall(r\"event.button ?== ?2\", response.text):\n","      return 0\n","    else:\n","      return 1"],"metadata":{"id":"gIK7odJ8WvVH","executionInfo":{"status":"ok","timestamp":1705021804527,"user_tz":-480,"elapsed":16,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["# 13.Checks the number of forwardings (Web_Forwards)\n","def forwarding(response):\n","  if response == \"\":\n","    return 1\n","  else:\n","    if len(response.history) <= 2:\n","      return 0\n","    else:\n","      return 1"],"metadata":{"id":"52ak8QtaWxMn","executionInfo":{"status":"ok","timestamp":1705021804527,"user_tz":-480,"elapsed":15,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["# calls the other functions and stores all the features of the URL in the list. We will extract the features of each URL and append to this list.\n","#Function to extract features\n","def featureExtraction(url):\n","\n","  features = []\n","  #Address bar based features (10)\n","  # features.append(getDomain(url))\n","  features.append(havingIP(url))\n","  features.append(haveAtSign(url))\n","  features.append(getLength(url))\n","  features.append(getDepth(url))\n","  features.append(redirection(url))\n","  features.append(httpDomain(url))\n","  features.append(tinyURL(url))\n","  features.append(prefixSuffix(url))\n","\n","  # features.append(label)\n","\n","  return features"],"metadata":{"id":"r6WGv0ApWySz","executionInfo":{"status":"ok","timestamp":1705021804527,"user_tz":-480,"elapsed":14,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":24,"outputs":[]},{"cell_type":"markdown","source":["\n","\n","> # **Model Training**\n","\n"],"metadata":{"id":"QCz8DXy1VVbd"}},{"cell_type":"code","source":["# Splitting the dataset into train and test sets: 80-20 split\n","from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 12)\n","X_train.shape, X_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UCTVQQHtSpbg","executionInfo":{"status":"ok","timestamp":1705021804527,"user_tz":-480,"elapsed":14,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}},"outputId":"bb26808f-e934-417e-8064-a97eb8198de8"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((66400, 8), (16600, 8))"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["#importing packages\n","from sklearn.metrics import accuracy_score\n","\n","# Creating holders to store the model performance results\n","ML_Model = []\n","acc_train = []\n","acc_test = []\n","\n","#function to call for storing the results\n","def storeResults(model, a,b):\n","  ML_Model.append(model)\n","  acc_train.append(round(a, 3))\n","  acc_test.append(round(b, 3))"],"metadata":{"id":"w84ldaVaSqN_","executionInfo":{"status":"ok","timestamp":1705021804528,"user_tz":-480,"elapsed":12,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","execution_count":27,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":92},"id":"3gHDUzjrSSuW","executionInfo":{"status":"ok","timestamp":1705021943323,"user_tz":-480,"elapsed":138807,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}},"outputId":"45898dcf-80e3-469c-f118-a1689453bba9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["MLPClassifier(alpha=0.01, hidden_layer_sizes=[100, 100, 100],\n","              learning_rate_init=0.1, max_iter=500, solver='sgd')"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MLPClassifier(alpha=0.01, hidden_layer_sizes=[100, 100, 100],\n","              learning_rate_init=0.1, max_iter=500, solver=&#x27;sgd&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MLPClassifier</label><div class=\"sk-toggleable__content\"><pre>MLPClassifier(alpha=0.01, hidden_layer_sizes=[100, 100, 100],\n","              learning_rate_init=0.1, max_iter=500, solver=&#x27;sgd&#x27;)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":27}],"source":["# Multilayer Perceptrons model\n","from sklearn.neural_network import MLPClassifier\n","\n","# instantiate the model\n","mlp = MLPClassifier(alpha=0.01, hidden_layer_sizes=([100,100,100]), max_iter=500, solver='sgd', learning_rate_init=0.1)\n","\n","# fit the model\n","mlp.fit(X_train, y_train)"]},{"cell_type":"code","source":["#predicting the target value from the model for the samples\n","y_test_mlp = mlp.predict(X_test)\n","y_train_mlp = mlp.predict(X_train)"],"metadata":{"id":"vt2YbUf4Svpa","executionInfo":{"status":"ok","timestamp":1705021943323,"user_tz":-480,"elapsed":13,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["#computing the accuracy of the model performance\n","acc_train_mlp = accuracy_score(y_train,y_train_mlp)\n","acc_test_mlp = accuracy_score(y_test,y_test_mlp)\n","\n","print(\"Multilayer Perceptrons: Accuracy on training Data: {:.3f}\".format(acc_train_mlp))\n","print(\"Multilayer Perceptrons: Accuracy on test Data: {:.3f}\".format(acc_test_mlp))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bfiyURbfSv9G","executionInfo":{"status":"ok","timestamp":1705021943323,"user_tz":-480,"elapsed":10,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}},"outputId":"078367c6-276c-40c0-f7ed-09f11176852c"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["Multilayer Perceptrons: Accuracy on training Data: 0.797\n","Multilayer Perceptrons: Accuracy on test Data: 0.800\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","\n","# Predict on the test set\n","y_pred = mlp.predict(X_test)\n","\n","# Calculate accuracy\n","accuracy = accuracy_score(y_test, y_pred)\n","\n","print(\"Accuracy:\", accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-ihMmlwJY4_h","executionInfo":{"status":"ok","timestamp":1705021944035,"user_tz":-480,"elapsed":720,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}},"outputId":"97373aa9-9ae5-4846-a27a-e8c8bb93be88"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8004819277108434\n"]}]},{"cell_type":"code","source":["# Import necessary libraries\n","from sklearn.metrics import confusion_matrix\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","# Make predictions\n","y_pred = mlp.predict(X_test)\n","\n","# Create confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","\n","# Visualize the confusion matrix using seaborn\n","plt.figure(figsize=(10,7))\n","sns.heatmap(cm, annot=True, fmt='d')\n","plt.xlabel('Predicted')\n","plt.ylabel('Truth')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":619},"id":"ijbqp9H7Y2_u","executionInfo":{"status":"ok","timestamp":1705021944036,"user_tz":-480,"elapsed":24,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}},"outputId":"e85a70f9-038a-410f-d982-ea33de7ce299"},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["def predict_phishing(url, mlp):\n","  # Extract features from the URL\n","  url_features = featureExtraction(url)\n","\n","  # Make predictions without scaling\n","  prediction = mlp.predict([url_features])\n","  if prediction >= 0.99:\n","      print(url, \"- PHISHING: \", prediction, \"acc\")\n","  else:\n","    print(url, \"- NOT-PHISHING: \", prediction, \"acc\")\n","\n","  return prediction[0]"],"metadata":{"id":"3S3xobO7V8hR","executionInfo":{"status":"ok","timestamp":1705021944037,"user_tz":-480,"elapsed":23,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["sample_url = \"https://bard.google.com/chat/1badd107cddc3545\"\n","domain_processed = getDomain(sample_url)\n","print(domain_processed)\n","prediction_result = predict_phishing(sample_url, mlp)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S2r1q8BDZjTU","executionInfo":{"status":"ok","timestamp":1705021958598,"user_tz":-480,"elapsed":427,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}},"outputId":"3d1855e8-2fd2-4791-d713-76efa207f352"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["bard.google.com\n","https://bard.google.com/chat/1badd107cddc3545 - NOT-PHISHING:  [0] acc\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["# save Tree model to file\n","import pickle\n","import joblib\n","# save the model to a file\n","joblib.dump(mlp, 'mlp.joblib')\n","pickle.dump(mlp, open(\"mlp.pkl\", \"wb\"))"],"metadata":{"id":"soh1TFHrY-ia","executionInfo":{"status":"ok","timestamp":1705021944037,"user_tz":-480,"elapsed":16,"user":{"displayName":"ISMAIL MASSERAN","userId":"13778563960690147056"}}},"execution_count":34,"outputs":[]}]}